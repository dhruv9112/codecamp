/* display properties */
/* they are used to change the property of children elements(which are inside container) */
body{
    margin: 0;
    padding: 0;
}

/* .container{
    width: 900px;
    height: 600px;
    background-color: brown;
    /* display flex divides the inner content into rows and columns */
    /* display: flex; */
    /* flex direction act as kind of main axis, by default its row*/
    /* flex-direction: row; */
    /* justify content adjusts its value according to flex direction or main axis */
    /* justify-content: center; */
    /* align items works perpendicular to flex direction or it works in cross axis */
    /* align-items: center; */

/* } */
  
 /* vw stands for view width, vh for view height */

/* .container{
   width: 100vw;
   height: 100vh; 
   background-color: coral;
   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;

}
 /* percent can be applied only when width and height are same  */


 /* .pfp{
    width: 10vw;
    height: 10vw;
   
    border-radius: 50%;
    background-color: white;
    background-image: url('https://github.com/dhruv9112.png');
    background-size: cover;
    
} 


.class1{
    margin-top: 1vw;
    margin-bottom: 3vw;
}  */



/* .box{
    width: 100px;
    height: 100px;
    border: 2px solid black;
}

.first{
    background-color: aqua;
}

.second{
    background-color: pink;
}

.third{
    background-color: yellow;
} */


.container{
    width: 800px;
    height: 800px;
    background-color: yellow;
}

.box{
    width: 200px;
    height: 200px;
    background-color: red;
    animation: left-right 2s forwards infinite alternate;
}


/* see definition on w3s schools */
/* keyframes are used to define style at particular instance */
@keyframes left-right{
    0% {
        transform: translateX(0);
    
    }
    33%{
        transform: translateY(300%);     
    }
    66%{
        transform: translateX(300%) translateY(300%);
    }
    100%{
        transform: translateX(300%);
    }

}
    

